org: f72e1c13062e4f45ad951530acf9e5a7
app: notification-step-machine
service: notification-step-machine

configValidationMode: error
frameworkVersion: ">=3"
package:
  individually: true

provider:
  name: aws
  runtime: go1.x
  memorySize: 128 # optional, in MB, default is 1024
  environment:
    APP_NAME: ${param:APP_NAME}
    DYNAMODB_JOBS_TTL_TABLE_NAME: ${self:service}-jobsTTL3-${opt:stage, self:provider.stage}
    DYNAMODB_JOBS_TABLE_NAME: ${self:service}-jobs-${opt:stage, self:provider.stage}
    LAMBDA_JWT_ROUTER_CORS_HEADERS: ${param:LAMBDA_JWT_ROUTER_CORS_HEADERS}
    LAMBDA_JWT_ROUTER_CORS_METHODS: ${param:LAMBDA_JWT_ROUTER_CORS_METHODS}
    LAMBDA_JWT_ROUTER_CORS_ORIGIN: ${param:LAMBDA_JWT_ROUTER_CORS_ORIGIN}
    LAMBDA_JWT_ROUTER_HMAC_SECRET: ${param:LAMBDA_JWT_ROUTER_HMAC_SECRET}
    REGION_AWS: ${param:REGION_AWS}
    STAGE: ${param:STAGE}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DeleteItem
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:UpdateItem
          Resource:
          - arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_JOBS_TTL_TABLE_NAME}
          - arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_JOBS_TTL_TABLE_NAME}/index/*
        - Effect: Allow
          Action:
            - dynamodb:DeleteItem
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:UpdateItem
          Resource:
          - arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_JOBS_TABLE_NAME}
          - arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_JOBS_TABLE_NAME}/index/*

functions:
  api:
    timeout: 30
    handler: bin/api
    package:
      artifact: bin/api.zip
    events:
      - http:
          method: any
          path: /{proxy+}
          cors: true
  thaw:
    timeout: 30
    handler: bin/thaw
    package:
      artifact: bin/thaw.zip
    events:
      - stream:
          arn: arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_JOBS_TTL_TABLE_NAME}
          type: dynamodb
          batchSize: 10
          enabled: true
          filterPatterns:
            - eventName: [ REMOVE ]

resources: # CloudFormation template syntax from here on.
  Resources:
    jobsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-jobs-${opt:stage, self:provider.stage}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: gsi1
            AttributeType: S
          - AttributeName: gsi1-rk1
            AttributeType: S
          - AttributeName: gsi2
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: gsi1
            KeySchema:
              - AttributeName: gsi1
                KeyType: HASH
              - AttributeName: gsi1-rk1
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: gsi2
            KeySchema:
              - AttributeName: gsi2
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    jobsTTLTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-jobsTTL3-${opt:stage, self:provider.stage}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true

constructs:
  async:
    type: queue
    alarm: seantcanavan@gmail.com
    encryption: 'kmsManaged'
    batchSize: 1
    worker:
      handler: bin/sqs
      memorySize: 128
      timeout: 30
      package:
        artifact: bin/sqs.zip
      events:
        - sqs:
          - ${self:service}-jobsAsync-${opt:stage, self:provider.stage}

plugins:
  - serverless-lift
  - serverless-step-functions
